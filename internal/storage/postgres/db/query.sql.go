// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package db

import (
	"context"
)

const findByOriginalURL = `-- name: FindByOriginalURL :one
SELECT short_url FROM urls WHERE original_url = $1
`

func (q *Queries) FindByOriginalURL(ctx context.Context, originalUrl string) (string, error) {
	row := q.db.QueryRowContext(ctx, findByOriginalURL, originalUrl)
	var short_url string
	err := row.Scan(&short_url)
	return short_url, err
}

const getURL = `-- name: GetURL :one
SELECT original_url FROM urls WHERE short_url = $1
`

func (q *Queries) GetURL(ctx context.Context, shortUrl string) (string, error) {
	row := q.db.QueryRowContext(ctx, getURL, shortUrl)
	var original_url string
	err := row.Scan(&original_url)
	return original_url, err
}

const saveURL = `-- name: SaveURL :exec
INSERT INTO urls (short_url, original_url) VALUES ($1, $2)
`

type SaveURLParams struct {
	ShortUrl    string
	OriginalUrl string
}

func (q *Queries) SaveURL(ctx context.Context, arg SaveURLParams) error {
	_, err := q.db.ExecContext(ctx, saveURL, arg.ShortUrl, arg.OriginalUrl)
	return err
}
